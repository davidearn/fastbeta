% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_beta_SI.R
\name{estimate_beta_SI}
\alias{estimate_beta_SI}
\title{Estimate time-varying transmission rates (SI method)}
\usage{
estimate_beta_SI(df = data.frame(), par_list = list(), method = "trapezoid")
}
\arguments{
\item{df}{A data frame with numeric columns:

\describe{
\item{\code{t}}{Time. \code{t[i]} is equal to
\ifelse{latex}{\out{$t_{i-1} = t_0 + (i-1) \Delta t$}}{\ifelse{html}{\out{<i>t</i><sub><i>i</i>&minus;1</sub> = <i>t</i><sub>0</sub>+(<i>i</i>&minus;1)<i>&Delta;t</i>}}{t_i-1 = t_0 + (i-1)*Dt}}
in units
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}},
so that \code{t[i] - t[i-1]} is equal to 1.
}
\item{\code{C}}{Reported incidence. \code{C[i]} is the number of cases
reported between times \code{t[i-1]} and \code{t[i]}.
}
\item{\code{B}}{Births. \code{B[i]} is the number of births between times
\code{t[i-1]} and \code{t[i]}.
}
\item{\code{mu}}{Natural mortality rate. \code{mu[i]} is the rate at time
\code{t[i]} expressed per unit
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}
and per capita.
}
}

\code{B} is optional if \code{hatN0} and \code{nu} are defined in \code{par_list}, and
\code{mu} is optional if \code{mu} is defined in \code{par_list} (see Details).}

\item{par_list}{A list containing:

\describe{
\item{\code{prep}}{[ \ifelse{latex}{\out{$p_\text{rep}$}}{\ifelse{html}{\out{<i>p</i><sub>rep</sub>}}{p_rep}} ]
Case reporting probability.
}
\item{\code{trep}}{[ \ifelse{latex}{\out{$t_\text{rep}$}}{\ifelse{html}{\out{<i>t</i><sub>rep</sub>}}{t_rep}} ]
Case reporting delay in units
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}.
}
\item{\code{S0}}{[ \ifelse{latex}{\out{$S_0$}}{\ifelse{html}{\out{<i>S</i><sub>0</sub>}}{S_0}} ]
Number of susceptibles at time
\ifelse{latex}{\out{$t = t_0$}}{\ifelse{html}{\out{<i>t</i> = <i>t</i><sub>0</sub>}}{t = t_0}}.
}
\item{\code{I0}}{[ \ifelse{latex}{\out{$I_0$}}{\ifelse{html}{\out{<i>I</i><sub>0</sub>}}{I_0}} ]
Number of infecteds at time
\ifelse{latex}{\out{$t = t_0$}}{\ifelse{html}{\out{<i>t</i> = <i>t</i><sub>0</sub>}}{t = t_0}}.
}
\item{\code{hatN0}}{[ \ifelse{latex}{\out{$\widehat{N}_0$}}{\ifelse{html}{\out{<i>&Ntilde;</i><sub>0</sub>}}{hatN_0}} ]
Population size at time
\ifelse{latex}{\out{$t = 0$}}{\ifelse{html}{\out{<i>t</i> = 0}}{t = 0}}
years.
}
\item{\code{nu}}{[ \ifelse{latex}{\out{$\nu_\text{c}$}}{\ifelse{html}{\out{<i>&nu;<sub>c</sub></i>}}{nu_c}} ]
Birth rate expressed per unit
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}
and relative to
\ifelse{latex}{\out{$\hat{N}_0$}}{\ifelse{html}{\out{<i>&Ntilde;</i><sub>0</sub>}}{hatN_0}}
(if modeled as constant).
}
\item{\code{mu}}{[ \ifelse{latex}{\out{$\mu_\text{c}$}}{\ifelse{html}{\out{<i>&mu;</i><sub>c</sub>}}{mu_c}} ]
Natural mortality rate expressed per unit
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}
and per capita (if modeled as constant).
}
\item{\code{tgen}}{[ \ifelse{latex}{\out{$t_\text{gen}$}}{\ifelse{html}{\out{<i>t</i><sub>gen</sub>}}{t_gen}} ]
Mean generation interval of the disease of interest in units
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}.
}
}

\code{hatN0} and \code{nu} are optional if \code{B} is defined in \code{df}, and
\code{mu} is optional if \code{mu} is defined in \code{df} (see Details).}

\item{method}{Character scalar. One of \code{"trapezoid"} (recommended),
\code{"forward"}, and \code{"backward"}, indicating that estimates of
\code{S}, \code{I}, and \code{beta} should be calculated as derived using
the trapezoidal method, forward Euler method, or backward Euler
method.}
}
\value{
A data frame with numeric columns:

\describe{
\item{\code{t}}{Time. Identical to \code{df$t}.}
\item{\code{C}}{Reported incidence, imputed. Identical to \code{df$C},
except with missing values imputed (see Details).
}
\item{\code{Z}}{Incidence. \code{Z[i]} is the estimated
number of infections between times \code{t[i-1]} and \code{t[i]}.
}
\item{\code{B}}{Births, imputed. Identical to \code{df$B} (if supplied),
except with missing values and zeros imputed (see Details).
}
\item{\code{mu}}{Natural mortality rate, imputed. Identical to \code{df$mu}
(if supplied), except with missing values imputed (see Details).
}
\item{\code{S}}{Number of susceptibles. \code{S[i]} is the estimated
number of susceptibles at time \code{t[i]}.
}
\item{\code{I}}{Number of infecteds. \code{I[i]} is the estimated
number of infecteds at time \code{t[i]}.
}
\item{\code{beta}}{Transmission rate. \code{beta[i]} is the estimated
transmission rate at time \code{t[i]} expressed per unit
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}
per susceptible per infected.
}
}

It possesses \code{par_list} and \code{method} as attributes.
}
\description{
\code{estimate_beta_SI()} applies the SI method (see References)
to estimate the time-varying transmission rate
\ifelse{latex}{\out{$\beta(t)$}}{\ifelse{html}{\out{<i>&beta;</i>(<i>t</i>)}}{beta(t)}}
from time series of reported incidence, births, and
natural mortality, observed at equally spaced time points
\ifelse{latex}{\out{$t_k = t_0 + k \Delta t$}}{\ifelse{html}{\out{<i>t<sub>k</sub></i> = <i>t</i><sub>0</sub>+<i>k&Delta;t</i>}}{t_k = t_0 + k*Dt}}
(for \ifelse{latex}{\out{$k = 0,\ldots,n$}}{\ifelse{html}{\out{<i>k</i> = 0,...,<i>n</i>}}{k = 0,...,n}}),
where
\ifelse{latex}{\out{$\Delta t$}}{\ifelse{html}{\out{<i>&Delta;t</i>}}{Dt}}
denotes the observation interval. Users are advised to smooth
the transmission rate time series returned by \code{estimate_beta_SI()}.
This can be accomplished using \code{\link[stats:loess]{stats::loess()}} with an appropriate
choice of \code{span}.
}
\section{Mock vital data}{

If \code{df$B} is undefined in the function call, then \code{df$B[i]}
gets the value \code{with(par_list, nu * hatN0 * 1)} for all \code{i}.
If \code{df$mu} is undefined the function call, then \code{df$mu[i]}
gets the value \code{with(par_list, mu)} for all \code{i}.
}

\section{Missing data}{

Missing values in \code{df[, c("C", "B", "mu")]} are not tolerated
by the SI method. They are imputed via linear interpolation
between observed values. If there are no observations before
the first missing value, then complete imputation is
impossible. In this case, the SI method may fail: columns
\code{S}, \code{I}, and \code{beta} in the output may be filled with \code{NA}.

Strings of zeros in \code{df$C} may introduce spurious zeros
and large numeric elements in column \code{beta} of the output.
To prevent these errors, zeros in \code{df$C} are imputed like
missing values. If there are no nonzero observations before
the first zero, then complete imputation is impossible, and
the output should be scanned for outliers.
}

\examples{
# Simulate a reported incidence time series using
# a seasonally forced transmission rate
par_list <- make_par_list(dt_weeks = 1, prep = 0.25)
df <- make_data(
  par_list = par_list,
  n = 1042, # 20 years is 1042 weeks
  with_dem_stoch = TRUE,
  seeds = c(5, 3, 9)
)
head(df)

# Reconstruct incidence, susceptibles, infecteds,
# and the seasonally forced transmission rate
df_SI <- estimate_beta_SI(df, par_list)
head(df_SI)

# Fit a smooth loess curve to the transmission rate
# time series
loess_fit <- loess(
  formula   = beta ~ t,
  data      = df_SI,
  span      = 53 / nrow(df_SI),
  degree    = 2,
  na.action = "na.exclude"
)
df_SI$beta <- predict(loess_fit)

# Inspect
df_SI$t_years <- df$t_years
plot(S ~ t_years, df, type = "l", ylim = 1e03 * c(43, 58))
lines(S ~ t_years, df_SI, col = "red")
plot(beta ~ t_years, df, type = "l", ylim = 1e-05 * c(0.95, 1.25))
lines(beta ~ t_years, df_SI, col = "red")

}
\references{
deJonge MS, Jagan M, Krylova O, Earn DJD. Fast estimation of
time-varying transmission rates for infectious diseases.
}
