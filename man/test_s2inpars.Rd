% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_s2inpars.R
\name{test_s2inpars}
\alias{test_s2inpars}
\title{Measure sensitivity to input error}
\usage{
test_s2inpars(
  pars_to_vary = c("tgen"),
  par_list_ref = make_par_list(),
  scale_factors = c(1),
  with_dem_stoch = FALSE,
  nsim = 4L,
  loess_par = c(NA, NA),
  ptpi_iter = 0L
)
}
\arguments{
\item{pars_to_vary}{Character vector. Contains the names of all
input parameters to be varied, chosen from \code{"S0"}, \code{"I0"}, \code{"nu"},
\code{"mu"}, \code{"tgen"}, \code{"prep"}, and \code{"trep"}.}

\item{par_list_ref}{A list returned by
\code{make_par_list(..., beta_mean = NA, N0 = NA, S0 = NA, I0 = NA)}.
Contains values for all data-generating parameters.}

\item{scale_factors}{Numeric vector. The values of \code{pars_to_vary[j]}
considered in the analysis are given by
\code{par_list_ref[[pars_to_vary[j]]] * scale_factors}.}

\item{with_dem_stoch}{Logical scalar, passed to \code{\link[=make_data]{make_data()}}. If
\code{TRUE}, then simulations account for demographic stochasticity.}

\item{nsim}{Integer scalar. The number of simulations to perform.}

\item{loess_par}{Integer vector of length 2. Determines the degree
of smoothing when loess curves are fit to raw estimates of the
seasonally forced transmission rate (see Details). Estimates
generated by \code{\link[=estimate_beta_S]{estimate_beta_S()}} use \code{loess_par[1]}, while those
generated by \code{\link[=estimate_beta_SI]{estimate_beta_SI()}} use \code{loess_par[2]}.}

\item{ptpi_iter}{Integer scalar, passed to \code{\link[=ptpi]{ptpi()}}. The number of
iterations desired when correcting erroneous values of \code{S0} using
peak-to-peak iteration.}
}
\value{
A numeric array with dimensions
\code{c(length(scale_factors), length(pars_to_vary), nsim, 2)}. Stores
the relative root mean square error (RRMSE) in each estimate of
the seasonally forced transmission rate. The \verb{[i, j, k, m]}th entry
corresponds to simulation \code{k} of \code{nsim}, and estimate \code{m} of 2 from
that simulation using \code{par_vals_all[i, j]} (S method for \code{m = 1},
SI method for \code{m = 2}).

A list of the arguments of \code{test_s2dgbeta()} is included as an
attribute.
}
\description{
\code{test_s2inpars()} measures the sensitivity of transmission rate
estimation error to error in user-specified values of input
parameters. It simulates reported incidence data with fixed
data-generating parameters. It varies the input parameters
\emph{one at a time}, and, using each parametrization, it estimates
the data-generating, seasonally forced transmission rate from the
simulated data and records the estimation error. Simulations
are saved as \code{.RData} in the directory \code{"./RData/s2inpars/"}.
}
\details{
\enumerate{
\item \code{\link[=make_data]{make_data()}} is called to simulate \code{nsim} reported incidence
time series, with arguments:
\itemize{
\item \code{par_list = par_list_ref}, indicating the (fixed)
data-generating parameter values
\ifelse{latex}{\out{$\mathbf{\theta}$}}{\ifelse{html}{\out{<b><i>&theta;</i></b>}}{theta}}.
\item \code{n = 1042}, indicating the time series length.
\item \code{with_dem_stoch = with_dem_stoch}, indicating whether the
simulation should account for demographic stochasticity.
\item \code{seed = k}, where \code{k} is the simulation count out of \code{nsim},
making the result of each simulation reproducible.
}
}

The space of input parameters is sampled by assigning a parameter
in \code{pars_to_vary} its (true) value in \code{par_list_ref} multiplied
by a scale factor in \code{scale_factors}, and assigning all other
parameters their (true) value in \code{par_list_ref}. The total number
of parametrizations considered is thus given by
\code{length(pars_to_vary) * length(scale_factors)}. For each
parametrization
\ifelse{latex}{\out{$\mathbf{\xi}$}}{\ifelse{html}{\out{<b><i>&xi;</i></b>}}{xi}}:
\enumerate{
\item \code{\link[=estimate_beta_S]{estimate_beta_S()}} and \code{\link[=estimate_beta_SI]{estimate_beta_SI()}} are called to
estimate the seasonally forced transmission rate from each
simulation, with arguments:
\itemize{
\item \code{df = df}, where \code{df} is the output of \code{\link[=make_data]{make_data()}},
supplying the simulated reported incidence time series.
\item \code{par_list = par_list_in}, indicating the input parameter values
\ifelse{latex}{\out{$\mathbf{\xi}$}}{\ifelse{html}{\out{<b><i>&xi;</i></b>}}{xi}}.
There may be error in the input. In other words, the input
parameter values
\ifelse{latex}{\out{$\mathbf{\xi}$}}{\ifelse{html}{\out{<b><i>&xi;</i></b>}}{xi}}
may differ from the data-generating parameter values
\ifelse{latex}{\out{$\mathbf{\theta}$}}{\ifelse{html}{\out{<b><i>&theta;</i></b>}}{theta}}.
}

Mock (constant) birth and natural mortality time series are
created internally, with \code{B[i] = with(par_list, hatN0 * nu * 1)}
and \code{mu[i] = with(par_list, mu)} for all \code{i}.
\item \code{\link[stats:loess]{stats::loess()}} is called to fit a loess curve to each
raw estimate of the seasonally forced transmission rate,
with arguments
\itemize{
\item \code{formula = beta ~ t} and \code{data = df_est}, where \code{df_est} is
the output of \code{\link[=estimate_beta_S]{estimate_beta_S()}} or \code{\link[=estimate_beta_SI]{estimate_beta_SI()}},
indicating the time series to which the loess curve should
be fit.
\item \code{span = loess_par[i] / nrow(df_est)}, indicating (roughly)
the proportion of points to be weighted in local regression.
\item \code{degree = 2}, indicating that a quadratic polynomial should
be fit locally.
\item \code{na.action = "na.exclude"}, indicating that missing values
should be omitted in local regression but preserved in the
output of \code{\link[stats:predict]{stats::predict()}}.
}
\item \code{\link[=compute_rrmse]{compute_rrmse()}} is called to compute the error in each
loess estimate, with arguments
\itemize{
\item \code{x = df$beta}, indicating the true value of the transmission
rate at each observation time.
\item \code{y = predict(loess_fit)}, where \code{loess_fit} is the output
of \code{\link[stats:loess]{stats::loess()}}, indicating the estimated value of the
transmission rate at each observation time.
}
}
}
